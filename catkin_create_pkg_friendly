#!/bin/bash

# Errors
errorSelection="Unknown selection"
errorTest="Test test test test"
function err {
	echo "Error: $*"
}

echo "catkin_create_pkg_friendly v0.1"
echo "Author: Aleksandar Vladimirov Atanasov"
echo "Description: creates a more userfriendly approach when creating ROS packages using catkin_create_pkg"
echo "Note: Complete  the tutorial for setting the ROS environment or at least make sure rospack is added to PATH"


#MENU 1:	language - 1)c++, 2)python, 3)java, 4)javascript
#	choice(s): 1,2 (single or multiple choices possible)
#	--> add to an array with args that will be passed onto catkin_create_pkg
#MENU 2:	topic - 1)image, 2)kinematics ...
#	choice(s): 1,2 (single or multiple choices possible)
#	--> add to an array with args that will be passed onto catkin_create_pkg
#	--> loop through topics and see if rospackages for those are actually present
#		if yes continue
#		else offer installation procedure

pkgName=""	# contains the name of the package
pkgLangs=()	# contains all the languages the package will support
pkgTasks=()	# contains all the dependencies which are required to fulfill the selected tasks

echo "Select one of the following: "
options=("Name" "Languages" "Tasks" "Help" "Quit")
select opt in "${options[@]}"
do
	case $opt in
		"Name")
			echo "Before choosing a name for your package please read the naming conventions for ROS packages: http://wiki.ros.org/ROS/Patterns/Conventions#Packages"
			if [ -z $pkgName ] 
			then
				echo "Package name: "
				read pkgName
			else
				echo "Your package already has a name. Do you want to append something to it? ([y]=append, [n]=replace) "
				read choiceReplace
				if [ "$choiceReplace" == "y"]
				then
					read pkgNameAppend
					pkgName+=pkgNameAppend
				elif [ "$choiceReplace" == "n" ]
				then
					read pkgName
				else
					err $errorSelection
				fi
			fi
			;;
		"Languages")
			if [ ${#pkgTasks[@]} -eq 0 ]
			then
				echo "Consider choosing the tasks you want your package to do since some tasks maybe requiring a specific language"
			fi
			langOptions=("C++" "Python" "Java" "JavaScript" "C#")
			select lang in "${langOptions[@]}"
			do
				case $lang in
					"C++")
					;;
					"Python")
					;;
					"Java")
					;;
					"Javascript")
					;;
					"C#")
					;;
					*)
						err $errorSelection
					;;
				esac
			done
			# parse selection
			;;
		"Tasks")
			echo "TODO"
			# display a set of tasks each bound to one or more ROS dependencies
			# if dependencies are not met, offer the user the choice to install (if he/she chooses not to do so, remove task along with dependencies)
			;;
		"Create")
			echo "TODO"
			# check if everything that is required for the package creation is present
			;;
		"Help")
			echo "TODO"
			;;
		"Quit")
			echo "Exiting without creating a new package..."
			exit 0
			;;
		*)
			err $errorSelection
			;;
	esac
done

#rosargs=()
#rosargs+=("a1")
#rosargs+=("a2")
#for arg in "${rosargs[@]}"
#do
#	echo $arg
#done
